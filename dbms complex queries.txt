Complex Queries

1)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME)
        SELECT e.first_name,e.salary,d.department_name from employees e inner join departments d on e.department_id=d.department_id where e.salary=(SELECT MIN(salary) from employees);

2)	LIST MINIMUM SALARY FOR EACH DEPARTMENT
         SELECT department_id,MIN(salary) FROM employees GROUP BY(department_id);

4)	LIST ALL THE EMPLOYEES WHO ARE WORKING IN FORD’S DEPARTMENT.
        SELECT * FROM employees WHERE department_id=(SELECT department_id FROM employee WHERE first_name like "%ford%");

5)	LIST ALL EMPLOYEE WHO ARE WORKING IN WARD'S DEPARTMENT AND
	EARNING MORE THEN MARTIN
        SELECT * FROM employees WHERE department_id=(SELECT department_id FROM employees WHERE first_name LIKE "%ward%") AND salary>(SELECT salary FROM employees WHERE first_name LIKE "%martin%");
         
6)	DISPLAY EMPLOYEE NUMBER, NAME,DEPT NUMBER, DEPT NAME, AND LOCATION
        SELECT e.employee_id,e.first_name,e.department_id,d.department_name,l.city FROM employees e join departments d on e.department_id=d.department_id join locations l on d.location_id=l.location_id ;
             
7)	DISPLAY THE FOLLOWING RESULT
        SELECT d.department_id,d.department_name,e.first_name FROM employees e join departments d on e.department_id=d.department_id;

8)	LIST ALL THE EMPLOYEE WHO ARE WORKING IN NEW YORK
        SELECT e.first_name,d.department_id,d.department_name,l.city FROM employees e join departments d on e.department_id=d.department_id join locations l on d.location_id=l.location_id where city='london';

9)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME) IN THE RESPECTIVE DEPARTMENT.
        SELECT e.first_name,e.salary,d.department_name FROM employees e join departments d on e.department_id=d.department_id where salary=(SELECT MIN(salary) FROM employees);

10)	WRITE A SQL STATEMENT TO DISPLAY THE HIGHEST PAID EMPLOYEE'S (NAME, JOB, MANAGER NAME, SALARY AND DEPARTMENT NAME AND DEPARTMENT NO.) IN THE RESPECTIVE DEPARTMENT
        SELECT e.first_name,e.job_id,e.manager_id,e.salary,d.department_name from employees e join departments d on e.department_id=d.department_id where salary in(SELECT  MAX(salary) from employees GROUP BY(department_id));

11)	WRITE A SQL STATEMENT TO DISPLAY THE EMPLOYEE NAME (BOSS) AND NUMBER OF EMPLOYEE (SUBORDINATES) DIRECTLY REPORTING TO HIM?
         SELECT e.employee_id, e.first_name, m.MngCount FROM employees e JOIN (SELECT manager_id, COUNT(employee_id) as MngCount FROM Employees GROUP BY Manager_ID) m  ON e.Manager_ID = m.Manager_ID

12)	DISPLAY THE NAMES, DESIGNATION AND SALARIES OF ALL EMPLOYEES WHO HAVE MANAGER ALONG WITH MANAGER'S NAME, DESIGNATION AND MANAGER'S SALARY.
	(SELF-JOIN)
         select distinct e.first_name,m.manager_id as reports_to,m.first_name as Manager from employees e inner join employees m on e.manager_id=m.employee_id;

13)	 CREATE THE FOLLOWING TABLES:
                            ORDER: {ID, ORDERDATE, ORDERNUMBER}
                        ORDER_ITEM: {ID, ORDERID, PRODUCTID, UNITPRICE, QUANTITY}
                      PRODUCT: {ID, PRODUCTNAME}
                          WRITE A QUERY TO DISPLAY THE FOLLOWING OUTPUT SORTED BY ORDER NO:
             CREATE table ORDER (ID INT PRIMARY KEY,ORDERDATE date,ORDERNUMBER INT);
             CREATE TABLE ORDER_ITEM(ID INT,ORDERID INT,PRODUCT_ID INT,UNITPRICE INT,QUANTITY INT,FOREIGN KEY(ORDERID) REFERENCES ORDER(ID),FOREIGN KEY(PRODUCT_ID)REFERENCES PRODUCT(ID));
             CREATE TABLE PRODUCT(ID INT,PRODUCTNAME varchar(20));
             SELECT O.ID,O.ORDERDATE,P.PRODUCTNAME,OI.QUANTITY,OI.UNITPRICE FROM ORDER O JOIN ORDER_ITEM OI on O.ID=OI.ORDERID JOIN PRODUCT P ON OI.PRODUCTID=P.ID;

14)	 FIND THE 2ND MINIMUM SALARY OF THE EMPLOYEE.
         SELECT MAX(salary) FROM employees where salary NOT IN(SELECT MAX(salary) from employees);

15)	 FIND THE MAX 3 SALARIES FROM EMPLOYEE TABLE.
         select * from employees where salary in(select salary from employees order by salary desc) order by salary desc LIMIT 3;
 
17)	 DISPLAY DEPARTMENT NO WISE TOTAL SALARY WHERE MORE THAN 2 EMPLOYEES EXIST IN A DEPARTMENT.
         SELECT department_id,SUM(salary) FROM employees GROUP BY department_id HAVING COUNT(employee_id)>2  ;